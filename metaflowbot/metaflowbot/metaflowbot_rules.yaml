
# Help
# TODO : Craft a better help message.

- name: Dummy rule to define help anchors
  event_type: never match
  message: &helpmessage help(.*)|how to(.*)
  action:
    message: &helptext >
      Hey, I am Metaflowbot! I can help you to manage Metaflow
      runs and inspect results of past runs.

      If you want to inspect results, type the following commands
      for more information: `how to inspect run` and `how to inspect`.

      Note that all discussions with me should happen in a thread.
      You can open a new thread with me e.g. by saying `@metaflow
      hey` on any channel. You can open multiple threads with
      me if you want to. Each thread is an independent discussion.

- name: First message of the thread, requesting help
  event_type: new_thread
  message: *helpmessage
  action:
    op: new-thread
    greeting: *helptext

# New thread

- name: First message of the thread
  event_type: new_thread
  action:
    op: new-thread
    greeting:
      Hey! Do you want to inspect an existing
      run (type `inspect`) or start one or more new runs
      (type `run`)?


# Lost process (internal event)

- name: Run process lost
  event_type: lost_process
  action:
    op: cleanup-lost-run
    fingerprint: '{event.msg}'

# Use code
- name: Use code
  event_type: user_message
  message: use code(.*)
  action:
    op: use-code
    codespec: '{event.msg}'

- name: How to use code
  event_type: user_message
  message: how to use code(.*)
  action:
    op: use-code
    howto: true


# Parameters

- name: Show parameters but no code set
  event_type: user_message
  message: show parameters
  context:
    use_code.run_id: null
  action:
    op: reply
    message:
      You need to set the exact version of the code to run first,
      so I know what parameters to show. Type `how to use code`
      for instructions how to set the code version.

- name: Show parameters
  event_type: user_message
  message: show parameters
  action:
    op: parameters
    code-run-id: '{context[use_code.run_id]}'
    existing: '{context[parameters]}'
    existing-csv: '{context[parameter_csv]}'
    show: true

# List flows

- name: Show all available flows
  event_type: user_message
  message: list flows
  action:
    op: list-flows

# Inspect run

- name: Define a run to be inspected
  event_type: user_message
  message: inspect run (.+)
  action:
    op: inspect-run
    runspec: '{event.msg}'

- name: Inspect run without an argument and no run set, show help
  event_type: user_message
  message: inspect run
  context:
    inspect.run_id: null
  action:
    op: inspect-run
    howto: true

- name: Inspect run without an argument but a run is set, basic inspect
  event_type: user_message
  message: inspect run
  action:
    op: inspect
    run-id: '{context[inspect.run_id]}'

# Inspect data

- name: Inspect data but no run set, show help
  event_type: user_message
  message: inspect data(.*)
  context:
    inspect.run_id: null
  action:
    op: inspect-run
    howto: true

- name: Inspect data with an argument
  event_type: user_message
  message: inspect data at (.+)
  action:
    op: inspect-data
    run-id: '{context[inspect.run_id]}'
    step: '{message_group[0]}'

- name: Inspect data without an argument, show help
  event_type: user_message
  message: inspect data(.*)
  action:
    op: inspect
    howto: true

# Inspect logs

- name: Inspect logs but no run set, show help
  event_type: user_message
  message: inspect logs(.*)
  context:
    inspect.run_id: null
  action:
    op: inspect_run
    howto: true

- name: Inspect logs with an argument
  event_type: user_message
  message: inspect logs at (.+)
  action:
    op: inspect-logs
    run-id: '{context[inspect.run_id]}'
    step: '{message_group[0]}'

- name: Inspect logs without an argument, show help
  event_type: user_message
  message: inspect data(.*)
  action:
    op: inspect
    howto: true

# Inspect

- name: Inspect but no run set
  event_type: user_message
  message: inspect
  context:
    inspect.run_id: null
  action:
    op: inspect-run
    howto: true

- name: Inspect the chosen run
  event_type: user_message
  message: inspect
  action:
    op: inspect
    run-id: '{context[inspect.run_id]}'

- name: How to inspect run
  event_type: user_message
  message: how to inspect run
  action:
    op: inspect-run
    howto: true

- name: How to inspect (fallback)
  event_type: user_message
  message: how to inspect(.*)
  action:
    op: inspect
    howto: true

# Help fallback when no other 'how to's or helps match

- name: Generic help fallback
  event_type: user_message
  message: *helpmessage
  action:
    op: reply
    message: *helptext


# Tell me a Joke :)
- name: Tell me a joke
  event_type: user_message
  message: tell me a joke
  action:
    op: joke

# Slash Commands Come Here
- name : Slash Command With No Text
  event_type: slash_message
  message: list flows
  action:
    op: list-flows
